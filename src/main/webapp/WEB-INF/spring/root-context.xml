<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<bean id="careerAlarmService" class="com.somebody.serviece.member.Scheduler" />
	<task:scheduler id="gsScheduler" pool-size="10" />
 	<task:executor id="gsTaskExecutor" pool-size="10" />
 	<task:annotation-driven executor="gsTaskExecutor" scheduler="gsScheduler" />
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- Root Context: defines shared resources visible to all other web components 
		dbcp 만들어주는 법 (hiraki 처음 불르는 클래스 안 메서드 네임불러서 만듬 ) -->
	<bean id="somebody" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl"
			value="jdbc:oracle:thin:@icia.cxu8ltcsvljy.ap-northeast-2.rds.amazonaws.com:1521:ORCL"></property>
		<property name="username" value="kmasters"></property>
		<property name="password" value="01054202519!"></property>
	</bean>
	<!-- 만든 dbcp 사용 (생성자에 접근해야함) -->
	<bean id="ds" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="somebody"></constructor-arg>
	</bean>
	<!-- 각빈이 메모리를 할당해주는 지 TEST클래스에서 확인가능 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds"></property>
	</bean>
	<!--트렌젝션 수동처리 -->
	<bean id="txmanager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>
	<!-- 오라클 인터페이스 주소 설정해주기 -->
	<mybatis-spring:scan base-package="com.somebody.db"></mybatis-spring:scan>
	
	<!-- 자바에서 메일 보내기
	<bean id="javaMail"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="587" />
		<property name="username" value="zmffhqj7144" />
		<property name="password" value="" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.debug">true</prop>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.checkserveridentity">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>
 -->

</beans>
